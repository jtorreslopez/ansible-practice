- name: Setup Wordpress
  hosts: app
  become: true
  vars_files:
    - vars/software.yml
    - vars/services.yml
    - vars/mariadb.yml
    - vars/passwd.yml
  tasks:
  - block:
    - name: Install Remi Repo
      yum_repository:
        name: remi-php74
        description: Remi's PHP 7.4 RPM repository for Enterprise Linux 7 - $basearch
        mirrorlist: http://cdn.remirepo.net/enterprise/7/php74/mirror
        enabled: yes
        gpgcheck: 0
    - name: Install Remi Safe Repo
      yum_repository:
        name: remi-safe
        description: Safe Remi's RPM repository for Enterprise Linux 7 - $basearch
        mirrorlist: http://cdn.remirepo.net/enterprise/7/safe/mirror
        enabled: yes
        gpgcheck: 0
    - name: Install EPEL
      yum_repository:
        name: epel
        description: Extra Packages for Enterprise Linux 7 - $basearch
        baseurl: http://download.fedoraproject.org/pub/epel/7/$basearch
        enabled: yes
        gpgcheck: 0
    when:
      - ansible_distribution == 'CentOS'

  - name: Install LAMP on EL
    yum:
      name: "{{ item }}"
      state: present
    loop:
      - "{{ el_packages }}"
    when:
      - ansible_distribution == 'CentOS'

  - name: Install LAMP on Debian
    apt:
      name: "{{ item }}"
      state: present
    loop:
      - "{{ debian_packages }}"
    when:
      - ansible_distribution == 'Debian'

  - name: Unarchive wordpress
    unarchive:
      src: ./files/wordpress.tar.gz
      dest: /var/www/html/
      owner: root
      group: root

  - name: Create wp-config.php
    copy:
      src: /var/www/html/wp-config-sample.php
      dest: /var/www/html/wp-config.php
      remote_src: yes
      owner: root
      group: root

  - name: Customize wp-config.php
    lineinfile:
      path: /var/www/html/wp-config.php
      regexp: "{{ item.from }}"
      line: "{{ item.to }}"
      state: present
    loop:
      - { from: 'database_name_here', to: "define( 'DB_NAME', 'wordpress');"}
      - { from: 'username_here', to: "define( 'DB_USER', 'wordpress' );"}
      - { from: 'password_here', to: "define( 'DB_PASSWORD', 'wordpress' );"}

  - name: Configure PHP.ini
    lineinfile:
      path: /etc/php.ini
      line: "short_open_tag = On"
      state: present
    when:
      - ansible_distribution == 'CentOS'

  - name: Delete default index.html
    file:
      path: /var/www/html/index.html
      state: absent
    ignore_errors: yes
  - name: Restart Apache on EL
    service:
      name: "{{ el_apache }}"
      state: started
    when:
      - ansible_distribution == 'CentOS'

  - name: Restart Apache on Debian
    service:
      name: "{{ debian_apache }}"
      state: started
    when:
      - ansible_distribution == 'Debian'

  - name: Start Mariadb
    service:
      name: mariadb
      state: started

  - block:
    - name: Create the database
      mysql_db:
        name: "{{ wp_db_name }}"
        state: present 
        login_unix_socket: "{{ el_socket }}"
        login_user: root
    - name: Setup database user
      mysql_user:
        name: "{{ wp_db_user }}"
        password: "{{ wp_db_pass }}"
        login_unix_socket: "{{ el_socket}}"
        priv: 'wordpress.*:ALL'
        state: present
    when:
      - ansible_distribution == 'CentOS'

  - block:
    - name: Create the database
      mysql_db:
        name: "{{ wp_db_name }}"
        state: present
        login_unix_socket: "{{ debian_socket }}"
        login_user: root
    - name: Setup database user
      mysql_user:
        name: "{{ wp_db_user }}"
        password: "{{ wp_db_pass }}"
        login_unix_socket: "{{ debian_socket }}"
        priv: 'wordpress.*:ALL'
        state: present
    when:
      - ansible_distribution == 'Debian'

  - name: Check if firewalld is active
    command: systemctl is-active firewalld
    register: firewalld_status
    ignore_errors: true

  - name: Open firewall ports if needed
    firewalld:
      service: http
      permanent: yes
      state: enabled
      immediate: yes
    when:
      - firewalld_status['stdout'] == "active"
